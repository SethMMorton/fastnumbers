# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist = lint, mypy, py37, py38, py39, py310, py311, py12
# Other valid environments are:
#   format
#   lint
#   mypy
#   docs
#   bump
#   clean
#   py{37,38,39,310,311,312}-prof  (to update the profiling data}

# Don't error out if a user hasn't installed all python versions.
skip_missing_interpreters =
    true

[testenv]
passenv = CC, CFLAGS, FN_DEBUG, FN_COV
deps =
    pytest
    pytest-faulthandler
    hypothesis
    typing_extensions
    numpy
    build
commands =
    # All versions need to build and patch doctest for testing the fastnumbers module.
    {envpython} dev/patch-doctest.py
    # Uncomment the below to see compilation output
    # {envpython} -m build
    # The tests.
    {envpython} -m doctest fastnumbers
    {envpython} dev/test-runner.py {envpython} {posargs}

# Format code
[testenv:format]
skip_install = true
deps =
    ruff
    clang-format
commands =
    {envpython} dev/formatting.py

# Check code quality.
[testenv:lint]
deps =
    ruff
    clang-format
    twine
    build
commands =
    {envpython} dev/formatting.py --check
    ruff check
    {envpython} -m build
    twine check dist/*
skip_install = true

# Type checking
[testenv:mypy]
deps =
    mypy
    hypothesis
    pytest
    numpy
    setuptools_scm
commands =
    mypy --strict tests dev

# Build documentation.
# sphinx and sphinx_rtd_theme not in docs/requirements.txt because they
# will already be installed on readthedocs.
[testenv:docs]
deps =
    -r docs/requirements.txt
commands =
    sphinx-build docs/source build/sphinx/html

# Bump version
[testenv:bump]
skip_install = true
passenv = HOME
deps = setuptools_scm
commands = {envpython} dev/bump.py {posargs:}

# For running profiling.
[testenv:py37-prof]
commands = {envpython} profiling/profile.py profiling/results-3.7.md

[testenv:py38-prof]
commands = {envpython} profiling/profile.py profiling/results-3.8.md

[testenv:py39-prof]
commands = {envpython} profiling/profile.py profiling/results-3.9.md

[testenv:py310-prof]
commands = {envpython} profiling/profile.py profiling/results-3.10.md

[testenv:py311-prof]
commands = {envpython} profiling/profile.py profiling/results-3.11.md

[testenv:py312-prof]
commands = {envpython} profiling/profile.py profiling/results-3.12.md
