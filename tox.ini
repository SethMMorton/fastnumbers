# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist =
    py{27,34,35,36,37}-testing
# Other valid evironments are:
#   py{27-36}-build
#   docs
#   pywin

[testenv]
passenv = CC CFLAGS
deps =
    -rdev/testing-requirements.txt
commands =
    # All versions need to build and patch doctest for testing the fastnumbers module.
    {envpython} setup.py build_ext --inplace
    {envpython} dev/patch_doctest.py
    {envpython} -m doctest fastnumbers
    py{27,34,35,36,37}: {envpython} -m pytest --doctest-glob=README.rst

# This is a bit cumbersome, but it was cleaner other approaches I tried.
[testenv:py27-build]
deps =
commands = {envpython} setup.py bdist_wheel

[testenv:py34-build]
deps =
commands = {[testenv:py27-build]commands}

[testenv:py35-build]
deps =
commands = {[testenv:py27-build]commands}

[testenv:py36-build]
deps =
commands = {[testenv:py27-build]commands}

# Build documentation.
[testenv:docs]
deps =
    sphinx
    sphinx_rtd_theme
commands =
    {envpython} setup.py build_sphinx

# Probably should run build for all versions first.
[testenv:release]
deps =
    twine
    check-manifest
commands =
    check-manifest
    {envpython} setup.py sdist --formats gztar
    {envpython} -m twine upload dist/*

# pywin is for use with appveyor.com
[testenv:pywin]
basepython = {env:PYTHON:}\python.exe
commands =
    {envpython} setup.py build_ext --inplace
    {envpython} dev/patch_doctest.py
    {envpython} -m doctest fastnumbers
    {envpython} -m pytest --doctest-glob=README.rst
    {envpython} setup.py bdist_wheel bdist_wininst

[travis]
python =
  2.7: py27-testing
  3.4: py34-testing
  3.5: py35-testing
  3.6: py36-testing
  3.7: py37-testing
